import graphviz
dotall = graphviz.Digraph(comment='', engine='dot')

with dotall.subgraph(name="cluster_DAG") as dot:
    #dot.node('v', 'Node', xlabel="(StoredValue, Adjoint)")
    dot.node('v_0', 'x')
    dot.node('v_1', 'y')
    dot.node('v_2', '2')
    dot.node('v_3', '^')
    dot.node('v_4', '*')
    dot.node('v_5', 'Sin()')
    dot.node('v_6', 'Exp()')
    dot.node('v_7', '+')
    dot.node('v_8', 'z')
    dot.node('v_9', '*')
    dot.node('v_10', 'Log()')
    dot.edge('v_3', 'v_0', constraint='true', minlen='1.5')
    dot.edge('v_3', 'v_2', constraint='true', minlen='1.5')
    dot.edge('v_4', 'v_1', constraint='true', minlen='1.5')
    dot.edge('v_4', 'v_3', constraint='true', minlen='1.5')
    dot.edge('v_6', 'v_3', constraint='true', minlen='2')
    dot.edge('v_5', 'v_4', constraint='true', minlen='1.5')
    dot.edge('v_7', 'v_5', constraint='true', minlen='1.5')
    dot.edge('v_7', 'v_6', constraint='true', minlen='1.5')
    dot.edge('v_9', 'v_6', constraint='true', minlen='1.5')
    dot.edge('v_9', 'v_10', constraint='true', minlen='1.5')
    dot.edge('v_10', 'v_8', constraint='true', minlen='1.5')
    dot.attr(label="Expression DAG")
    print(dot.source)

with dotall.subgraph(name="cluster_Tree") as d:
    d.attr(label="Expression Tree")
    d.node('w_0', 'x')
    d.node('w_1', 'y')
    d.node('w_2', '2')
    d.node('w_3', '^')
    d.node('w_4', '*')
    d.node('w_5', 'Sin()')
    d.node('w_6', '2')
    d.node('w_7', 'x')
    d.node('w_8', '^')
    d.node('w_9', 'Exp()')
    d.node('w_10', '+')
    d.node('w_11', '2')
    d.node('w_12', 'x')
    d.node('w_13', '^')
    d.node('w_14', 'Exp()')
    d.node('w_15', 'z')
    d.node('w_16', '*')
    d.node('w_17', 'Log()')
    d.edge('w_3', 'w_0', constraint='true', minlen='1.5')
    d.edge('w_3', 'w_2', constraint='true', minlen='1.5')
    d.edge('w_8', 'w_6', constraint='true', minlen='1.5')
    d.edge('w_8', 'w_7', constraint='true', minlen='1.5')
    d.edge('w_9', 'w_8', constraint='true', minlen='1.5')
    d.edge('w_5', 'w_4', constraint='true', minlen='1.5')
    d.edge('w_4', 'w_1', constraint='true', minlen='1.5')
    d.edge('w_4', 'w_3', constraint='true', minlen='1.5')
    d.edge('w_10', 'w_5', constraint='true', minlen='1.5')
    d.edge('w_10', 'w_9', constraint='true', minlen='1.5')
    d.edge('w_13', 'w_12', constraint='true', minlen='1.5')
    d.edge('w_13', 'w_11', constraint='true', minlen='1.5')
    d.edge('w_14', 'w_13', constraint='true', minlen='1.5')
    d.edge('w_17', 'w_15', constraint='true', minlen='1.5')
    d.edge('w_16', 'w_17', constraint='true', minlen='1.5')
    d.edge('w_16', 'w_14', constraint='true', minlen='1.5')

dotall.attr(margin="0")

dotall.format = 'pdf'
# Note this location is the same images folder that we use for overleaf
# make sure to pull changes in overleaf editor to see them if adding
# any here (also make sure to give unique file name each time)
dotall.render('images/Clustergraph.gv').replace('\\', '/')
dotall.render('images/Clustergraph.gv', view=True)
